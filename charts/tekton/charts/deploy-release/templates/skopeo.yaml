apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: skopeo
  labels:
    {{- include "deploy-release.labels" . | nindent 4 }}
spec:
  description: >-
    Copy an image (manifest, filesystem layers, signatures) from one location to another.
  params:
    - name: COMPONENTS
      type: array
      description: List of components to be copied. Image names will be derived from the values file.
    - name: SOURCE_TAG
      type: string
      description: Image tag to copy
    - name: DESTINATION_TAG
      type: string
      description: Destination tag of copied image
  volumes:
    - name: result-share
      emptyDir: {}
  steps:
    - name: map-image-names
      image: alpine
      volumeMounts:
        - name: result-share
          mountPath: /tmp/image-names
      args: ["$(params.COMPONENTS[*])"]
      script: |
        #!/bin/sh
        set -e

        for component in ${@}; do
          if [[ "$component" == "frontend" ]]; then
            echo "{{ .Values.frontend.imageName }}" >> /tmp/image-names/image-names.txt
          elif [[ "$component" == "backend" ]]; then
            echo "{{ .Values.backend.imageName }}" >> /tmp/image-names/image-names.txt
          fi
        done
    - name: copy
      image: quay.io/skopeo/stable:latest
      volumeMounts:
        - name: result-share
          mountPath: /tmp/image-names
      env:
        - name: REGISTRY_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.dockerConfigSecret }}
              key: username
        - name: REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.dockerConfigSecret }}
              key: password
      script: |
        #!/bin/sh
        set +x

        IMAGE_NAMES=$(cat /tmp/image-names/image-names.txt)

        for image in $IMAGE_NAMES; do
          echo "Copying $image from $(params.SOURCE_TAG) to $(params.DESTINATION_TAG)"
          skopeo copy \
            --src-creds "${REGISTRY_USERNAME}:${REGISTRY_PASSWORD}" \
            --dest-creds "${REGISTRY_USERNAME}:${REGISTRY_PASSWORD}" \
            docker://$image:$(params.SOURCE_TAG) docker://$image:$(params.DESTINATION_TAG)
        done
